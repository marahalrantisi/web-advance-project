{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true,\n  // Important for handling cookies\n  timeout: 10000,\n  // 10 second timeout\n  retry: 3,\n  // Number of retries\n  retryDelay: 1000 // Delay between retries in milliseconds\n});\n\n// Add request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = sessionStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle errors and retries\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const {\n    config\n  } = error;\n\n  // If there's no config or retry count is 0, reject\n  if (!config || !config.retry) {\n    return Promise.reject(error);\n  }\n\n  // Set retry count\n  config.retryCount = config.retryCount || 0;\n\n  // Check if we should retry\n  if (config.retryCount < config.retry) {\n    // Increase retry count\n    config.retryCount += 1;\n\n    // Create new promise to handle retry\n    const backoff = new Promise(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, config.retryDelay || 1000);\n    });\n\n    // Wait for backoff and retry\n    await backoff;\n    return api(config);\n  }\n\n  // Handle specific error cases\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('user');\n    window.location.href = '/signin';\n  } else if (error.code === 'ERR_NETWORK') {\n    console.error('Network error - please check if the server is running');\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","withCredentials","timeout","retry","retryDelay","interceptors","request","use","config","token","sessionStorage","getItem","Authorization","error","Promise","reject","response","_error$response","retryCount","backoff","resolve","setTimeout","status","removeItem","window","location","href","code","console"],"sources":["D:/react-node-project-final/react-node-project/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // Important for handling cookies\r\n  timeout: 10000, // 10 second timeout\r\n  retry: 3, // Number of retries\r\n  retryDelay: 1000 // Delay between retries in milliseconds\r\n});\r\n\r\n// Add request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle errors and retries\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const { config } = error;\r\n    \r\n    // If there's no config or retry count is 0, reject\r\n    if (!config || !config.retry) {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    // Set retry count\r\n    config.retryCount = config.retryCount || 0;\r\n\r\n    // Check if we should retry\r\n    if (config.retryCount < config.retry) {\r\n      // Increase retry count\r\n      config.retryCount += 1;\r\n\r\n      // Create new promise to handle retry\r\n      const backoff = new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve();\r\n        }, config.retryDelay || 1000);\r\n      });\r\n\r\n      // Wait for backoff and retry\r\n      await backoff;\r\n      return api(config);\r\n    }\r\n\r\n    // Handle specific error cases\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      sessionStorage.removeItem('token');\r\n      sessionStorage.removeItem('user');\r\n      window.location.href = '/signin';\r\n    } else if (error.code === 'ERR_NETWORK') {\r\n      console.error('Network error - please check if the server is running');\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE,IAAI;EAAE;EACvBC,OAAO,EAAE,KAAK;EAAE;EAChBC,KAAK,EAAE,CAAC;EAAE;EACVC,UAAU,EAAE,IAAI,CAAC;AACnB,CAAC,CAAC;;AAEF;AACAV,GAAG,CAACW,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACR,OAAO,CAACY,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAnB,GAAG,CAACW,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACf,MAAM;IAAET;EAAO,CAAC,GAAGK,KAAK;;EAExB;EACA,IAAI,CAACL,MAAM,IAAI,CAACA,MAAM,CAACL,KAAK,EAAE;IAC5B,OAAOW,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B;;EAEA;EACAL,MAAM,CAACU,UAAU,GAAGV,MAAM,CAACU,UAAU,IAAI,CAAC;;EAE1C;EACA,IAAIV,MAAM,CAACU,UAAU,GAAGV,MAAM,CAACL,KAAK,EAAE;IACpC;IACAK,MAAM,CAACU,UAAU,IAAI,CAAC;;IAEtB;IACA,MAAMC,OAAO,GAAG,IAAIL,OAAO,CAAEM,OAAO,IAAK;MACvCC,UAAU,CAAC,MAAM;QACfD,OAAO,CAAC,CAAC;MACX,CAAC,EAAEZ,MAAM,CAACJ,UAAU,IAAI,IAAI,CAAC;IAC/B,CAAC,CAAC;;IAEF;IACA,MAAMe,OAAO;IACb,OAAOzB,GAAG,CAACc,MAAM,CAAC;EACpB;;EAEA;EACA,IAAI,EAAAS,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBK,MAAM,MAAK,GAAG,EAAE;IAClC;IACAZ,cAAc,CAACa,UAAU,CAAC,OAAO,CAAC;IAClCb,cAAc,CAACa,UAAU,CAAC,MAAM,CAAC;IACjCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,SAAS;EAClC,CAAC,MAAM,IAAIb,KAAK,CAACc,IAAI,KAAK,aAAa,EAAE;IACvCC,OAAO,CAACf,KAAK,CAAC,uDAAuD,CAAC;EACxE;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}