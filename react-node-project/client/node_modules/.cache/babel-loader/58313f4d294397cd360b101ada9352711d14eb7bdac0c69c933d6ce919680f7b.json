{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-node-project-final\\\\react-node-project\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { authService } from '../services/authService';\n\n// Create auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth provider\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check auth status on app load\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n\n        // Verify token\n        const response = await authService.getCurrentUser();\n        if (response.user) {\n          setUser(response.user);\n        }\n      } catch (err) {\n        console.error('Error checking auth status:', err);\n        // Clear local data on error\n        sessionStorage.removeItem('token');\n        sessionStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n\n  // Sign in\n  const login = async (email, password, rememberMe) => {\n    try {\n      await authService.signin({\n        email,\n        password\n      });\n      const userData = await authService.getCurrentUser();\n      setUser(userData.user);\n      if (rememberMe) {\n        localStorage.setItem('authData', JSON.stringify({\n          email,\n          password\n        }));\n      }\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  // Sign up\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await authService.signup(userData);\n      return true;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error signing up:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Sign up failed');\n      return false;\n    }\n  };\n\n  // Sign out\n  const logout = async () => {\n    try {\n      await authService.signout();\n    } catch (err) {\n      console.error('Error signing out:', err);\n    } finally {\n      sessionStorage.removeItem('token');\n      sessionStorage.removeItem('user');\n      setUser(null);\n    }\n  };\n\n  // Update user data\n  const updateUser = updatedUser => {\n    sessionStorage.setItem('user', JSON.stringify(updatedUser));\n    setUser(updatedUser);\n  };\n\n  // Context values\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper hook to use auth context\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","checkAuthStatus","token","sessionStorage","getItem","response","getCurrentUser","err","console","removeItem","login","email","password","rememberMe","signin","userData","localStorage","setItem","JSON","stringify","register","signup","_err$response","_err$response$data","data","message","logout","signout","updateUser","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/react-node-project-final/react-node-project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { authService } from '../services/authService';\n\n// Create auth context\nconst AuthContext = createContext();\n\n// Auth provider\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check auth status on app load\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        \n        if (!token) {\n          setLoading(false);\n          return;\n        }\n        \n        // Verify token\n        const response = await authService.getCurrentUser();\n        \n        if (response.user) {\n          setUser(response.user);\n        }\n      } catch (err) {\n        console.error('Error checking auth status:', err);\n        // Clear local data on error\n        sessionStorage.removeItem('token');\n        sessionStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    checkAuthStatus();\n  }, []);\n\n  // Sign in\n  const login = async (email, password, rememberMe) => {\n    try {\n      await authService.signin({ email, password });\n      const userData = await authService.getCurrentUser();\n      setUser(userData.user);\n      if (rememberMe) {\n        localStorage.setItem('authData', JSON.stringify({ email, password }));\n      }\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  // Sign up\n  const register = async (userData) => {\n    try {\n      setError(null);\n      const response = await authService.signup(userData);\n      return true;\n    } catch (err) {\n      console.error('Error signing up:', err);\n      setError(err.response?.data?.message || 'Sign up failed');\n      return false;\n    }\n  };\n\n  // Sign out\n  const logout = async () => {\n    try {\n      await authService.signout();\n    } catch (err) {\n      console.error('Error signing out:', err);\n    } finally {\n      sessionStorage.removeItem('token');\n      sessionStorage.removeItem('user');\n      setUser(null);\n    }\n  };\n\n  // Update user data\n  const updateUser = (updatedUser) => {\n    sessionStorage.setItem('user', JSON.stringify(updatedUser));\n    setUser(updatedUser);\n  };\n\n  // Context values\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Helper hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}