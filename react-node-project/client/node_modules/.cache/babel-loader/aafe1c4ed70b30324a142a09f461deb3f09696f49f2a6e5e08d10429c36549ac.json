{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-node-project-final\\\\react-node-project\\\\client\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport Sidebar from '../components/sidebar';\nimport api from '../services/api';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // إنشاء اتصال WebSocket عند تحميل المكون\n  useEffect(() => {\n    const newSocket = io('/chat', {\n      auth: {\n        token: sessionStorage.getItem('token')\n      }\n    });\n    newSocket.on('connect', () => {\n      console.log('تم الاتصال بخادم الدردشة');\n    });\n    newSocket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('تم قطع الاتصال بخادم الدردشة');\n    });\n    setSocket(newSocket);\n\n    // تنظيف الاتصال عند إزالة المكون\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // جلب جهات الاتصال والرسائل\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await api.get('/chat/contacts');\n        setContacts(response.data.contacts);\n\n        // تحديد جهة الاتصال الافتراضية إذا كانت متوفرة\n        if (response.data.contacts.length > 0) {\n          setSelectedContact(response.data.contacts[0]);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('خطأ في جلب جهات الاتصال:', error);\n        setLoading(false);\n      }\n    };\n    fetchContacts();\n  }, []);\n\n  // جلب الرسائل عند تغيير جهة الاتصال المحددة\n  useEffect(() => {\n    if (selectedContact) {\n      const fetchMessages = async () => {\n        try {\n          const response = await api.get(`/chat/messages/${selectedContact.id}`);\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error('خطأ في جلب الرسائل:', error);\n        }\n      };\n      fetchMessages();\n    }\n  }, [selectedContact]);\n\n  // إرسال رسالة جديدة\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedContact || !socket) return;\n    const messageData = {\n      content: newMessage,\n      recipientId: selectedContact.id,\n      senderId: user.id,\n      timestamp: new Date().toISOString()\n    };\n    socket.emit('sendMessage', messageData);\n\n    // إضافة الرسالة إلى القائمة المحلية\n    setMessages(prevMessages => [...prevMessages, {\n      ...messageData,\n      sender: {\n        id: user.id,\n        name: user.name\n      }\n    }]);\n    setNewMessage('');\n  };\n\n  // تنسيق التاريخ\n  const formatTime = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString('ar-SA', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // return (\n  //   <div className=\"flex h-screen bg-gray-100\">\n  //     {/* الشريط الجانبي */}\n  //     <Sidebar />\n\n  //     {/* المحتوى الرئيسي */}\n  //     <div className=\"flex-1 flex flex-col\">\n  //       <div className=\"p-4 border-b bg-white shadow-sm\">\n  //         <h1 className=\"text-xl font-semibold text-gray-800\">الدردشة</h1>\n  //       </div>\n\n  //       {loading ? (\n  //         <div className=\"flex-1 flex justify-center items-center\">\n  //           <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n  //         </div>\n  //       ) : (\n  //         <div className=\"flex-1 flex overflow-hidden\">\n  //           {/* قائمة جهات الاتصال */}\n  //           <div className=\"w-1/4 border-l bg-white overflow-y-auto\">\n  //             <div className=\"p-4 border-b\">\n  //               <input\n  //                 type=\"text\"\n  //                 placeholder=\"بحث...\"\n  //                 className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n  //               />\n  //             </div>\n  //             <div className=\"divide-y\">\n  //               {contacts.map((contact) => (\n  //                 <div\n  //                   key={contact.id}\n  //                   className={`p-4 cursor-pointer hover:bg-gray-50 ${selectedContact?.id === contact.id ? 'bg-blue-50' : ''}`}\n  //                   onClick={() => setSelectedContact(contact)}\n  //                 >\n  //                   <div className=\"flex items-center\">\n  //                     <div className=\"w-10 h-10 rounded-full bg-blue-500 flex items-center justify-center text-white font-semibold\">\n  //                       {contact.name.charAt(0).toUpperCase()}\n  //                     </div>\n  //                     <div className=\"mr-3\">\n  //                       <p className=\"font-medium text-gray-800\">{contact.name}</p>\n  //                       <p className=\"text-sm text-gray-500 truncate\">{contact.lastMessage || 'لا توجد رسائل'}</p>\n  //                     </div>\n  //                   </div>\n  //                 </div>\n  //               ))}\n  //             </div>\n  //           </div>\n\n  //           {/* منطقة الدردشة */}\n  //           <div className=\"flex-1 flex flex-col\">\n  //             {selectedContact ? (\n  //               <>\n  //                 {/* رأس الدردشة */}\n  //                 <div className=\"p-4 border-b bg-white\">\n  //                   <div className=\"flex items-center\">\n  //                     <div className=\"w-10 h-10 rounded-full bg-blue-500 flex items-center justify-center text-white font-semibold\">\n  //                       {selectedContact.name.charAt(0).toUpperCase()}\n  //                     </div>\n  //                     <div className=\"mr-3\">\n  //                       <p className=\"font-medium text-gray-800\">{selectedContact.name}</p>\n  //                       <p className=\"text-sm text-gray-500\">\n  //                         {selectedContact.online ? 'متصل الآن' : 'غير متصل'}\n  //                       </p>\n  //                     </div>\n  //                   </div>\n  //                 </div>\n\n  //                 {/* محتوى الدردشة */}\n  //                 <div className=\"flex-1 overflow-y-auto p-4 bg-gray-50\">\n  //                   {messages.length === 0 ? (\n  //                     <div className=\"flex justify-center items-center h-full text-gray-500\">\n  //                       ابدأ محادثة جديدة\n  //                     </div>\n  //                   ) : (\n  //                     <div className=\"space-y-4\">\n  //                       {messages.map((message, index) => (\n  //                         <div\n  //                           key={index}\n  //                           className={`flex ${message.sender.id === user.id ? 'justify-end' : 'justify-start'}`}\n  //                         >\n  //                           <div\n  //                             className={`max-w-xs md:max-w-md rounded-lg p-3 ${\n  //                               message.sender.id === user.id\n  //                                 ? 'bg-blue-500 text-white'\n  //                                 : 'bg-white text-gray-800 border'\n  //                             }`}\n  //                           >\n  //                             <p>{message.content}</p>\n  //                             <p className={`text-xs mt-1 text-right ${\n  //                               message.sender.id === user.id ? 'text-blue-100' : 'text-gray-500'\n  //                             }`}>\n  //                               {formatTime(message.timestamp)}\n  //                             </p>\n  //                           </div>\n  //                         </div>\n  //                       ))}\n  //                     </div>\n  //                   )}\n  //                 </div>\n\n  //                 {/* نموذج إرسال الرسائل */}\n  //                 <div className=\"p-4 border-t bg-white\">\n  //                   <form onSubmit={sendMessage} className=\"flex\">\n  //                     <input\n  //                       type=\"text\"\n  //                       value={newMessage}\n  //                       onChange={(e) => setNewMessage(e.target.value)}\n  //                       placeholder=\"اكتب رسالة...\"\n  //                       className=\"flex-1 px-4 py-2 border rounded-r-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n  //                     />\n  //                     <button\n  //                       type=\"submit\"\n  //                       className=\"bg-blue-500 text-white px-4 py-2 rounded-l-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n  //                     >\n  //                       إرسال\n  //                     </button>\n  //                   </form>\n  //                 </div>\n  //               </>\n  //             ) : (\n  //               <div className=\"flex-1 flex justify-center items-center text-gray-500\">\n  //                 اختر جهة اتصال لبدء المحادثة\n  //               </div>\n  //             )}\n  //           </div>\n  //         </div>\n  //       )}\n  //     </div>\n  //   </div>\n  // );\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Chat\",\n    userRole: \"admin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-[calc(100vh-4rem)] flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-64 border-r border-gray-200 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: users.map(user => /*#__PURE__*/_jsxDEV(Button, {\n            variant: selectedStudent === user.id ? \"default\" : \"ghost\",\n            className: \"w-full justify-start\",\n            onClick: () => setSelectedStudent(user.id),\n            children: user.email\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col\",\n        children: selectedStudent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b border-gray-200 p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold\",\n              children: getStudentName(selectedStudent)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n            children: messages.map(message => {\n              var _currentUser, _currentUser2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `flex ${message.sender.id === ((_currentUser = currentUser) === null || _currentUser === void 0 ? void 0 : _currentUser.id) ? \"justify-end\" : \"justify-start\"}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `max-w-[70%] rounded-lg p-3 ${message.sender.id === ((_currentUser2 = currentUser) === null || _currentUser2 === void 0 ? void 0 : _currentUser2.id) ? \"bg-blue-500 text-white\" : \"bg-gray-100\"}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: message.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs mt-1 opacity-70\",\n                    children: formatDate(message.createdAt)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)\n              }, message.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-t border-gray-200 p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Type a message...\",\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                onKeyPress: e => e.key === \"Enter\" && handleSendMessage()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleSendMessage,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center justify-center text-gray-500\",\n          children: \"Select a student to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"m/oLdQgG73uhNcmhnuBu04ngCac=\", false, function () {\n  return [useAuth];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","Sidebar","api","io","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPage","_s","user","messages","setMessages","newMessage","setNewMessage","contacts","setContacts","selectedContact","setSelectedContact","socket","setSocket","loading","setLoading","newSocket","auth","token","sessionStorage","getItem","on","console","log","message","prevMessages","disconnect","fetchContacts","response","get","data","length","error","fetchMessages","id","sendMessage","e","preventDefault","trim","messageData","content","recipientId","senderId","timestamp","Date","toISOString","emit","sender","name","formatTime","dateString","date","toLocaleTimeString","hour","minute","DashboardLayout","title","userRole","children","className","fileName","_jsxFileName","lineNumber","columnNumber","users","map","Button","variant","selectedStudent","onClick","setSelectedStudent","email","getStudentName","_currentUser","_currentUser2","currentUser","formatDate","createdAt","Input","placeholder","value","onChange","target","onKeyPress","key","handleSendMessage","_c","$RefreshReg$"],"sources":["D:/react-node-project-final/react-node-project/client/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport Sidebar from '../components/sidebar';\nimport api from '../services/api';\nimport io from 'socket.io-client';\n\nconst ChatPage = () => {\n  const { user } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // إنشاء اتصال WebSocket عند تحميل المكون\n  useEffect(() => {\n    const newSocket = io('/chat', {\n      auth: {\n        token: sessionStorage.getItem('token')\n      }\n    });\n\n    newSocket.on('connect', () => {\n      console.log('تم الاتصال بخادم الدردشة');\n    });\n\n    newSocket.on('message', (message) => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    newSocket.on('disconnect', () => {\n      console.log('تم قطع الاتصال بخادم الدردشة');\n    });\n\n    setSocket(newSocket);\n\n    // تنظيف الاتصال عند إزالة المكون\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // جلب جهات الاتصال والرسائل\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await api.get('/chat/contacts');\n        setContacts(response.data.contacts);\n        \n        // تحديد جهة الاتصال الافتراضية إذا كانت متوفرة\n        if (response.data.contacts.length > 0) {\n          setSelectedContact(response.data.contacts[0]);\n        }\n        \n        setLoading(false);\n      } catch (error) {\n        console.error('خطأ في جلب جهات الاتصال:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchContacts();\n  }, []);\n\n  // جلب الرسائل عند تغيير جهة الاتصال المحددة\n  useEffect(() => {\n    if (selectedContact) {\n      const fetchMessages = async () => {\n        try {\n          const response = await api.get(`/chat/messages/${selectedContact.id}`);\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error('خطأ في جلب الرسائل:', error);\n        }\n      };\n\n      fetchMessages();\n    }\n  }, [selectedContact]);\n\n  // إرسال رسالة جديدة\n  const sendMessage = (e) => {\n    e.preventDefault();\n    \n    if (!newMessage.trim() || !selectedContact || !socket) return;\n    \n    const messageData = {\n      content: newMessage,\n      recipientId: selectedContact.id,\n      senderId: user.id,\n      timestamp: new Date().toISOString()\n    };\n    \n    socket.emit('sendMessage', messageData);\n    \n    // إضافة الرسالة إلى القائمة المحلية\n    setMessages(prevMessages => [...prevMessages, {\n      ...messageData,\n      sender: { id: user.id, name: user.name }\n    }]);\n    \n    setNewMessage('');\n  };\n\n  // تنسيق التاريخ\n  const formatTime = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString('ar-SA', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // return (\n  //   <div className=\"flex h-screen bg-gray-100\">\n  //     {/* الشريط الجانبي */}\n  //     <Sidebar />\n      \n  //     {/* المحتوى الرئيسي */}\n  //     <div className=\"flex-1 flex flex-col\">\n  //       <div className=\"p-4 border-b bg-white shadow-sm\">\n  //         <h1 className=\"text-xl font-semibold text-gray-800\">الدردشة</h1>\n  //       </div>\n        \n  //       {loading ? (\n  //         <div className=\"flex-1 flex justify-center items-center\">\n  //           <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n  //         </div>\n  //       ) : (\n  //         <div className=\"flex-1 flex overflow-hidden\">\n  //           {/* قائمة جهات الاتصال */}\n  //           <div className=\"w-1/4 border-l bg-white overflow-y-auto\">\n  //             <div className=\"p-4 border-b\">\n  //               <input\n  //                 type=\"text\"\n  //                 placeholder=\"بحث...\"\n  //                 className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n  //               />\n  //             </div>\n  //             <div className=\"divide-y\">\n  //               {contacts.map((contact) => (\n  //                 <div\n  //                   key={contact.id}\n  //                   className={`p-4 cursor-pointer hover:bg-gray-50 ${selectedContact?.id === contact.id ? 'bg-blue-50' : ''}`}\n  //                   onClick={() => setSelectedContact(contact)}\n  //                 >\n  //                   <div className=\"flex items-center\">\n  //                     <div className=\"w-10 h-10 rounded-full bg-blue-500 flex items-center justify-center text-white font-semibold\">\n  //                       {contact.name.charAt(0).toUpperCase()}\n  //                     </div>\n  //                     <div className=\"mr-3\">\n  //                       <p className=\"font-medium text-gray-800\">{contact.name}</p>\n  //                       <p className=\"text-sm text-gray-500 truncate\">{contact.lastMessage || 'لا توجد رسائل'}</p>\n  //                     </div>\n  //                   </div>\n  //                 </div>\n  //               ))}\n  //             </div>\n  //           </div>\n            \n  //           {/* منطقة الدردشة */}\n  //           <div className=\"flex-1 flex flex-col\">\n  //             {selectedContact ? (\n  //               <>\n  //                 {/* رأس الدردشة */}\n  //                 <div className=\"p-4 border-b bg-white\">\n  //                   <div className=\"flex items-center\">\n  //                     <div className=\"w-10 h-10 rounded-full bg-blue-500 flex items-center justify-center text-white font-semibold\">\n  //                       {selectedContact.name.charAt(0).toUpperCase()}\n  //                     </div>\n  //                     <div className=\"mr-3\">\n  //                       <p className=\"font-medium text-gray-800\">{selectedContact.name}</p>\n  //                       <p className=\"text-sm text-gray-500\">\n  //                         {selectedContact.online ? 'متصل الآن' : 'غير متصل'}\n  //                       </p>\n  //                     </div>\n  //                   </div>\n  //                 </div>\n                  \n  //                 {/* محتوى الدردشة */}\n  //                 <div className=\"flex-1 overflow-y-auto p-4 bg-gray-50\">\n  //                   {messages.length === 0 ? (\n  //                     <div className=\"flex justify-center items-center h-full text-gray-500\">\n  //                       ابدأ محادثة جديدة\n  //                     </div>\n  //                   ) : (\n  //                     <div className=\"space-y-4\">\n  //                       {messages.map((message, index) => (\n  //                         <div\n  //                           key={index}\n  //                           className={`flex ${message.sender.id === user.id ? 'justify-end' : 'justify-start'}`}\n  //                         >\n  //                           <div\n  //                             className={`max-w-xs md:max-w-md rounded-lg p-3 ${\n  //                               message.sender.id === user.id\n  //                                 ? 'bg-blue-500 text-white'\n  //                                 : 'bg-white text-gray-800 border'\n  //                             }`}\n  //                           >\n  //                             <p>{message.content}</p>\n  //                             <p className={`text-xs mt-1 text-right ${\n  //                               message.sender.id === user.id ? 'text-blue-100' : 'text-gray-500'\n  //                             }`}>\n  //                               {formatTime(message.timestamp)}\n  //                             </p>\n  //                           </div>\n  //                         </div>\n  //                       ))}\n  //                     </div>\n  //                   )}\n  //                 </div>\n                  \n  //                 {/* نموذج إرسال الرسائل */}\n  //                 <div className=\"p-4 border-t bg-white\">\n  //                   <form onSubmit={sendMessage} className=\"flex\">\n  //                     <input\n  //                       type=\"text\"\n  //                       value={newMessage}\n  //                       onChange={(e) => setNewMessage(e.target.value)}\n  //                       placeholder=\"اكتب رسالة...\"\n  //                       className=\"flex-1 px-4 py-2 border rounded-r-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n  //                     />\n  //                     <button\n  //                       type=\"submit\"\n  //                       className=\"bg-blue-500 text-white px-4 py-2 rounded-l-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n  //                     >\n  //                       إرسال\n  //                     </button>\n  //                   </form>\n  //                 </div>\n  //               </>\n  //             ) : (\n  //               <div className=\"flex-1 flex justify-center items-center text-gray-500\">\n  //                 اختر جهة اتصال لبدء المحادثة\n  //               </div>\n  //             )}\n  //           </div>\n  //         </div>\n  //       )}\n  //     </div>\n  //   </div>\n  // );\n  return (\n    <DashboardLayout title=\"Chat\" userRole=\"admin\">\n      <div className=\"h-[calc(100vh-4rem)] flex\">\n        {/* Student List */}\n        <div className=\"w-64 border-r border-gray-200 p-4\">\n          <h2 className=\"text-lg font-semibold mb-4\">Students</h2>\n          <div className=\"space-y-2\">\n            {users.map((user) => (\n              <Button\n                key={user.id}\n                variant={selectedStudent === user.id ? \"default\" : \"ghost\"}\n                className=\"w-full justify-start\"\n                onClick={() => setSelectedStudent(user.id)}\n              >\n                {user.email}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {/* Chat Area */}\n        <div className=\"flex-1 flex flex-col\">\n          {selectedStudent ? (\n            <>\n              {/* Chat Header */}\n              <div className=\"border-b border-gray-200 p-4\">\n                <h2 className=\"text-lg font-semibold\">{getStudentName(selectedStudent)}</h2>\n              </div>\n\n              {/* Messages */}\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                {messages.map((message) => (\n                  <div\n                    key={message.id}\n                    className={`flex ${\n                      message.sender.id === currentUser?.id ? \"justify-end\" : \"justify-start\"\n                    }`}\n                  >\n                    <div\n                      className={`max-w-[70%] rounded-lg p-3 ${\n                        message.sender.id === currentUser?.id\n                          ? \"bg-blue-500 text-white\"\n                          : \"bg-gray-100\"\n                      }`}\n                    >\n                      <p>{message.content}</p>\n                      <p className=\"text-xs mt-1 opacity-70\">{formatDate(message.createdAt)}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Message Input */}\n              <div className=\"border-t border-gray-200 p-4\">\n                <div className=\"flex space-x-2\">\n                  <Input\n                    placeholder=\"Type a message...\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\n                  />\n                  <Button onClick={handleSendMessage}>Send</Button>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"flex-1 flex items-center justify-center text-gray-500\">\n              Select a student to start chatting\n            </div>\n          )}\n        </div>\n      </div>\n    </DashboardLayout>\n  )\n};\n\nexport default ChatPage;\n"],"mappings":"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IAEvD,MAAM2B,WAAW,GAAG;MAClBC,OAAO,EAAElC,UAAU;MACnBmC,WAAW,EAAE/B,eAAe,CAACwB,EAAE;MAC/BQ,QAAQ,EAAEvC,IAAI,CAAC+B,EAAE;MACjBS,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IAEDjC,MAAM,CAACkC,IAAI,CAAC,aAAa,EAAEP,WAAW,CAAC;;IAEvC;IACAlC,WAAW,CAACoB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAE;MAC5C,GAAGc,WAAW;MACdQ,MAAM,EAAE;QAAEb,EAAE,EAAE/B,IAAI,CAAC+B,EAAE;QAAEc,IAAI,EAAE7C,IAAI,CAAC6C;MAAK;IACzC,CAAC,CAAC,CAAC;IAEHzC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;;EAED;EACA,MAAM0C,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,IAAI,GAAG,IAAIP,IAAI,CAACM,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACC,kBAAkB,CAAC,OAAO,EAAE;MACtCC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}