{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-node-project-final\\\\react-node-project\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// إنشاء سياق المصادقة\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// مزود سياق المصادقة\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // التحقق من حالة المصادقة عند تحميل التطبيق\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n\n        // التحقق من صلاحية الرمز\n        const response = await axios.get('/api/auth/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.user) {\n          setUser(response.data.user);\n        }\n      } catch (err) {\n        console.error('خطأ في التحقق من حالة المصادقة:', err);\n        // مسح البيانات المحلية في حالة وجود خطأ\n        sessionStorage.removeItem('token');\n        sessionStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n\n  // تسجيل الدخول\n  const login = async credentials => {\n    try {\n      setError(null);\n      const response = await axios.post('/api/auth/login', credentials);\n      if (response.data.token) {\n        sessionStorage.setItem('token', response.data.token);\n        sessionStorage.setItem('user', JSON.stringify(response.data.user));\n        setUser(response.data.user);\n        return true;\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('خطأ في تسجيل الدخول:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'فشل تسجيل الدخول');\n      return false;\n    }\n  };\n\n  // تسجيل مستخدم جديد\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await axios.post('/api/auth/register', userData);\n      if (response.data.token) {\n        sessionStorage.setItem('token', response.data.token);\n        sessionStorage.setItem('user', JSON.stringify(response.data.user));\n        setUser(response.data.user);\n        return true;\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('خطأ في التسجيل:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'فشل التسجيل');\n      return false;\n    }\n  };\n\n  // تسجيل الخروج\n  const logout = () => {\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('user');\n    setUser(null);\n  };\n\n  // تحديث بيانات المستخدم\n  const updateUser = updatedUser => {\n    sessionStorage.setItem('user', JSON.stringify(updatedUser));\n    setUser(updatedUser);\n  };\n\n  // القيم المتاحة في السياق\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n// دالة مساعدة لاستخدام سياق المصادقة\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('يجب استخدام useAuth داخل AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","checkAuthStatus","token","sessionStorage","getItem","response","get","headers","Authorization","data","err","console","removeItem","login","credentials","post","setItem","JSON","stringify","_err$response","_err$response$data","message","register","userData","_err$response2","_err$response2$data","logout","updateUser","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/react-node-project-final/react-node-project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// إنشاء سياق المصادقة\nconst AuthContext = createContext();\n\n// مزود سياق المصادقة\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // التحقق من حالة المصادقة عند تحميل التطبيق\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        \n        if (!token) {\n          setLoading(false);\n          return;\n        }\n        \n        // التحقق من صلاحية الرمز\n        const response = await axios.get('/api/auth/me', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        if (response.data.user) {\n          setUser(response.data.user);\n        }\n      } catch (err) {\n        console.error('خطأ في التحقق من حالة المصادقة:', err);\n        // مسح البيانات المحلية في حالة وجود خطأ\n        sessionStorage.removeItem('token');\n        sessionStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    checkAuthStatus();\n  }, []);\n\n  // تسجيل الدخول\n  const login = async (credentials) => {\n    try {\n      setError(null);\n      const response = await axios.post('/api/auth/login', credentials);\n      \n      if (response.data.token) {\n        sessionStorage.setItem('token', response.data.token);\n        sessionStorage.setItem('user', JSON.stringify(response.data.user));\n        setUser(response.data.user);\n        return true;\n      }\n    } catch (err) {\n      console.error('خطأ في تسجيل الدخول:', err);\n      setError(err.response?.data?.message || 'فشل تسجيل الدخول');\n      return false;\n    }\n  };\n\n  // تسجيل مستخدم جديد\n  const register = async (userData) => {\n    try {\n      setError(null);\n      const response = await axios.post('/api/auth/register', userData);\n      \n      if (response.data.token) {\n        sessionStorage.setItem('token', response.data.token);\n        sessionStorage.setItem('user', JSON.stringify(response.data.user));\n        setUser(response.data.user);\n        return true;\n      }\n    } catch (err) {\n      console.error('خطأ في التسجيل:', err);\n      setError(err.response?.data?.message || 'فشل التسجيل');\n      return false;\n    }\n  };\n\n  // تسجيل الخروج\n  const logout = () => {\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('user');\n    setUser(null);\n  };\n\n  // تحديث بيانات المستخدم\n  const updateUser = (updatedUser) => {\n    sessionStorage.setItem('user', JSON.stringify(updatedUser));\n    setUser(updatedUser);\n  };\n\n  // القيم المتاحة في السياق\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// دالة مساعدة لاستخدام سياق المصادقة\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('يجب استخدام useAuth داخل AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}